---
# Source: react-image-compressor/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-react-image-compressor
  namespace: leadspark-stage
  labels:
    helm.sh/chart: react-image-compressor-0.1.0
    app.kubernetes.io/name: react-image-compressor
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: react-image-compressor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-react-image-compressor
  namespace: leadspark-stage
  labels:
    helm.sh/chart: react-image-compressor-0.1.0
    app.kubernetes.io/name: react-image-compressor
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 81
      targetPort: 81
      protocol: TCP
      name: exporter
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: react-image-compressor
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: react-image-compressor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-react-image-compressor
  labels:
    helm.sh/chart: react-image-compressor-0.1.0
    app.kubernetes.io/name: react-image-compressor
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: react-image-compressor
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      labels:
        app.kubernetes.io/name: react-image-compressor
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      serviceAccountName: RELEASE-NAME-react-image-compressor
      securityContext:
        {}
      containers:
        - name: react-image-compressor
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          image: "bollohz/react-image-compressor:1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 81
              protocol: TCP
              name: exporter
            - containerPort: 80
              protocol: TCP
              name: http
          livenessProbe:
            httpGet:
              path: /nginx-status
              port: 81
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /nginx-status
              port: 81
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
        - name: nginx-exporter
          image: nginx/nginx-prometheus-exporter:0.4.2
          ports:
            - containerPort: 9113
          resources:
            limits:
              cpu: 200m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 10Mi
          
          args: [-nginx.scrape-uri http://localhost:81/nginx-status]
---
# Source: react-image-compressor/templates/hpa.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: RELEASE-NAME-react-image-compressor
  labels:
    helm.sh/chart: react-image-compressor-0.1.0
    app.kubernetes.io/name: react-image-compressor
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: RELEASE-NAME-react-image-compressor
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
---
# Source: react-image-compressor/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-react-image-compressor
  labels:
    helm.sh/chart: react-image-compressor-0.1.0
    app.kubernetes.io/name: react-image-compressor
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: "exampleapplication.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: RELEASE-NAME-react-image-compressor
              servicePort: 80
---
# Source: react-image-compressor/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "RELEASE-NAME-react-image-compressor-test-connection"
  labels:
    helm.sh/chart: react-image-compressor-0.1.0
    app.kubernetes.io/name: react-image-compressor
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['RELEASE-NAME-react-image-compressor:']
  restartPolicy: Never
