# Default values for react-image-compressor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: bollohz/react-image-compressor
  pullPolicy: IfNotPresent
  tag: 1.0.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

podDisruptionBudget:
  enabled: true
  minAvailable: 50%

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true

service:
  type: ClusterIP
  list:
    http:
      port: 80
      targetPort: 80
      protocol: TCP
    exporter:
      port: 81
      targetPort: 81
      protocol: TCP


ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: exampleapplication.local
      paths:
        - path: "/"
          backend:
            servicePort: 80
            serviceName:

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

deployment:
  liveness:
    httpGet:
      path: /nginx-status
      port: 81
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
  readiness:
    httpGet:
      path: /nginx-status
      port: 81
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
  exporter:
    image: nginx/nginx-prometheus-exporter:0.4.2
    containerPort: 9113
    resoureces:
      requests:
        memory: "10Mi"
        cpu: "10m"
      limits:
        memory: "50Mi"
        cpu: "200m"
    command:
      args: ["-nginx.scrape-uri", "http://localhost:81/nginx-status"]

resources:
   limits:
     cpu: 100m
     memory: 128Mi
   requests:
     cpu: 100m
     memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
